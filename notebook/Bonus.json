{
	"name": "Bonus",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "questoes",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "925ab937-978d-441e-8e51-08c28ed6551f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c0532d08-eeaa-491a-aec3-1e183a9b71b1/resourceGroups/GuiAzure/providers/Microsoft.Synapse/workspaces/gui-atento/bigDataPools/questoes",
				"name": "questoes",
				"type": "Spark",
				"endpoint": "https://gui-atento.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/questoes",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dataset = spark.read.csv('abfss://disco1@storageguidatalake.dfs.core.windows.net/data/dataset.csv/part-000??-9ce8ba6f-bacf-430e-b08c-f1be4607864f-c000.csv', sep=',',header=True)\n",
					""
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import functions as f"
				],
				"execution_count": 32
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Bônus 1"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Utilizando a coluna do dia da semana e filtrando pra sábado, domingo e segunda."
				]
			},
			{
				"cell_type": "code",
				"source": [
					"bonus_1 = dataset\\\n",
					"  .select('*')\\\n",
					"  .where((dataset.dia_da_semana == 7) | (dataset.dia_da_semana == 1) | (dataset.dia_da_semana == 2))"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"bonus_1.agg({'tempo_viagem': 'avg'}).show()"
				],
				"execution_count": 34
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Bônus 2"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"bonus_2 = dataset\\\n",
					"  .select('*', f.year('Data').alias('Ano'))\\\n",
					"  .where('Ano==2010')\\\n",
					"  .limit(500)"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_mapa = bonus_2.select('dropoff_latitude', 'dropoff_longitude', 'pickup_latitude', 'pickup_longitude').toPandas()"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"!pip install folium"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import folium"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"m = folium.Map(location=[40.730610, -73.935242], zoom_start=15)\n",
					"m"
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"for k, v in df_mapa.iterrows():\n",
					"  folium.Marker(\n",
					"    location=[v['dropoff_latitude'], v['dropoff_longitude']],\n",
					"    popup=\"Mt. Hood Meadows\",\n",
					"    icon=folium.Icon(icon=\"cloud\", color='red'),\n",
					"  ).add_to(m)\n",
					"  folium.Marker(\n",
					"    location=[v['pickup_latitude'], v['pickup_longitude']],\n",
					"    popup=\"Mt. Hood Meadows\",\n",
					"    icon=folium.Icon(icon=\"cloud\", color='green'),\n",
					"  ).add_to(m)"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"m"
				],
				"execution_count": 41
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Além desse método utilizando folium eu também fiz algumas transformações no power query e executei uma visualização dos pickups e dropoffs no Power BI."
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"![image-alt-text](https://storageguidatalake.dfs.core.windows.net/images/Screenshot_1.png?sv=2018-11-09&st=2022-12-07T00%3A46%3A47Z&se=2022-12-07T08%3A46%3A47Z&sr=c&sp=racwdl&sig=UnSziOL0Z%2BhQ8LFEzOSjuyOy4LItPOETzmovf6vEZL0%3D)"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"![image-alt-text](https://storageguidatalake.dfs.core.windows.net/images/Screenshot%20from%202022-12-06%2015-25-09.png?sv=2018-11-09&st=2022-12-07T00%3A47%3A44Z&se=2022-12-07T08%3A47%3A44Z&sr=c&sp=racwdl&sig=lXLIKXs0PvpS1xXnbEDxZrQcb9qrBmVc5z4KRqtnUuc%3D)"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"![image-alt-text](https://storageguidatalake.dfs.core.windows.net/images/Screenshot%20from%202022-12-06%2015-25-46.png?sv=2018-11-09&st=2022-12-07T00%3A47%3A41Z&se=2022-12-07T08%3A47%3A41Z&sr=c&sp=racwdl&sig=C7o5y1pcDoDPgluncSK2KMZ6WbGOQI4R4M6yaKRIVPg%3D)"
				]
			}
		]
	}
}